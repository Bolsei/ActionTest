name: Release

on: workflow_dispatch

jobs:
  release:
    name: Release

    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up jdk
        id: create_release
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Prepare and perform release with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Bolsei"
          mvn release:prepare release:perform --file pom.xml

      - name: Set git tag
        id: set-tag
        run: |
          {
            echo 'GIT_TAG<<EOF'
            git describe --tags --abbrev=0
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Get git tag
        env:
          GIT_TAG: ${{ steps.set-tag.outputs.GIT_TAG }}
        run: echo "The git tag is $GIT_TAG"




      - name: Create github release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_TAG: ${{ steps.set-tag.outputs.GIT_TAG }}
        with:
          tag_name: ${{env.GIT_TAG}}
          release_name: ${{env.GIT_TAG}}

  publish:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # if you have a protection rule on your repository, you'll need to give write permission to the workflow.
    steps:
      - name: Deploy JavaDoc ðŸš€
        uses: MathieuSoysal/Javadoc-publisher.yml@v2.5.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          javadoc-branch: javadoc
          java-version: 17
          target-folder: javadoc # url will be https://<username>.github.io/<repo>/javadoc, This can be left as nothing to generate javadocs in the root folder.
          project: maven # or gradle
          # subdirectories: moduleA moduleB #for subdirectories support, needs to be run with custom command
