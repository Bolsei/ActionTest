name: Release

on: workflow_dispatch

jobs:
  release:
    name: Release

    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up jdk
        id: create_release
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Prepare and perform release with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Bolsei"
          mvn release:prepare release:perform --file pom.xml

      - name: Set git tag
        id: set-tag
        run: |
          {
            echo 'GIT_TAG<<EOF'
            git describe --tags --abbrev=0
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Get git tag
        env:
          GIT_TAG: ${{ steps.set-tag.outputs.GIT_TAG }}
        run: echo "The git tag is $GIT_TAG"

#      - name: Create GitHub Release
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: v${{ github.event.inputs.releaseVersion }}
#          name: Release v${{ github.event.inputs.releaseVersion }}
#          body: ${{ steps.changelog.outputs.changelog }}
#          files: |
#            target/*.jar
#            target/*.pom
#          draft: true
#          prerelease: false
#          env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


#      - name: Create github release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GIT_TAG: ${{ steps.set-tag.outputs.GIT_TAG }}
#        run: curl -X GET --oauth2-bearer "$GITHUB_TOKEN" "https://api.github.com/repos/Bolsei/ActionTest/releases/tags/$GIT_TAG"
##        -d '{"tag_name":"$GIT_TAG","name":"$GIT_TAG"}'


      - name: Create github release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_TAG: ${{ steps.set-tag.outputs.GIT_TAG }}
        with:
          tag_name: ${{env.GIT_TAG}}
          release_name: ${{env.GIT_TAG}}
