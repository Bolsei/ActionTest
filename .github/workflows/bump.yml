name: Bump Version and Create PR

permissions:
  contents: write      # erlaubt push & branch erstellen
  pull-requests: write # erlaubt PR erstellen und auto-merge

on:
  workflow_dispatch:
    inputs:
      baseBranch:
        description: "Branch fÃ¼r Release (z.B. master oder release/1.2.x)"
        required: true
        default: "master"
      newVersion:
        description: "Neue Release-Version (z.B. 1.2.4 oder 1.3.0-RC1)"
        required: true
      preRelease:
        description: "Ist dies ein Pre-Release?"
        type: boolean
        default: false

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.baseBranch }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Set release version in pom.xml
        run: |
          mvn versions:set -DnewVersion=${{ github.event.inputs.newVersion }}
          mvn versions:commit

      - name: Commit release version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b bump/${{ github.event.inputs.newVersion }}
          git add .
          git commit -m "chore: release version ${{ github.event.inputs.newVersion }}"

      - name: Determine next snapshot version
        id: next_snapshot
        run: |
          RELEASE="${{ github.event.inputs.newVersion }}"

          if [ "${{ github.event.inputs.preRelease }}" = "true" ]; then
            # Bei Pre-Release bleibt die Basis-Version erhalten
            BASE=$(echo $RELEASE | sed -E 's/-[A-Za-z0-9.]+//')
            SNAPSHOT="${BASE}-SNAPSHOT"
          else
            BASE=${RELEASE%.*}
            PATCH=${RELEASE##*.}
            NEXT=$((PATCH + 1))
            SNAPSHOT="${BASE}.${NEXT}-SNAPSHOT"
          fi

          mvn versions:set -DnewVersion=$SNAPSHOT
          mvn versions:commit

          echo "snapshot=$SNAPSHOT" >> $GITHUB_OUTPUT

      - name: Commit next snapshot
        run: |
          git add .
          git commit -m "chore: prepare next snapshot version ${{ steps.next_snapshot.outputs.snapshot }}"

      - name: Push branch
        run: git push origin bump/${{ github.event.inputs.newVersion }}

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: bump/${{ github.event.inputs.newVersion }}
          title: "Release ${{ github.event.inputs.newVersion }}"
          body: |
            Automated PR to bump version to `${{ github.event.inputs.newVersion }}`  
            and prepare next snapshot `${{ steps.next_snapshot.outputs.snapshot }}`.
          base: ${{ github.event.inputs.baseBranch }}
          labels: release

      - name: Enable Auto-Merge (only for release PRs)
        if: startsWith(steps.cpr.outputs.pull-request-title, 'Release ')
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
